{"version":3,"file":"static/js/884.f42b26a6.chunk.js","mappings":"wQAwFA,UA/EqB,WAAO,IAAD,IACjBA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA4BE,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACMC,GAAWC,EAAAA,EAAAA,MACXC,GAAeC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,MAEpDC,EAAAA,EAAAA,YAAU,YACR,iBAAC,2FACCP,GAAa,GADd,mBAGyBQ,EAAAA,EAAAA,IAAkBd,GAH3C,OAGSe,EAHT,OAIGX,EAAUW,GACVT,GAAa,GALhB,gDAOGU,EAAAA,GAAAA,MAAA,UACK,KAAMC,QADX,8CAGAX,GAAa,GAVhB,wDAAD,EAaD,GAAE,CAACN,IACJ,IAAQkB,EACNf,EADMe,YAAaC,EACnBhB,EADmBgB,MAAOC,EAC1BjB,EAD0BiB,OAAQC,EAClClB,EADkCkB,SAAUC,EAC5CnB,EAD4CmB,aAAcC,EAC1DpB,EAD0DoB,aAE5D,OACE,iCACE,SAAC,KAAD,CAAMC,GAAIf,EAAagB,QAAvB,UACE,kBAAMC,UAAU,8FAAhB,WACE,SAAC,MAAD,CAAaA,UAAU,SADzB,eAKDR,IACC,iCACE,iBAAKQ,UAAU,iBAAf,WACE,0BACE,gBAAKC,IAtCF,iCAsCkBT,EAAaU,IAAKT,OAEzC,iBAAKO,UAAU,4CAAf,WACE,eAAIA,UAAU,qBAAd,SAAoCP,KACpC,eAAGO,UAAU,UAAb,2BAAsCJ,MACtC,eAAGI,UAAU,UAAb,oBAA+BH,EAAaM,QAAQ,OACpD,eAAGH,UAAU,UAAb,qBACWN,EAAOU,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,UAEhD,eAAGP,UAAU,UAAb,uBAAkCL,YAGtC,iBAAKK,UAAU,4CAAf,WACE,cAAGA,UAAU,mCAAb,qCAGA,2BACE,yBACE,SAAC,KAAD,CACEF,GAAG,OACHE,UAAU,yDAFZ,qBAOF,yBACE,SAAC,KAAD,CACEF,GAAG,UACHE,UAAU,yDAFZ,iCAWV,SAAC,KAAD,IACCrB,IAAa,SAAC,IAAD,MAGnB,C,mMCpFD6B,EAAAA,EAAAA,SAAAA,QAAyB,+BACzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QAAS,oCAGJ,IAAMC,EAAkB,mCAAG,sGACTF,EAAAA,EAAAA,IAAU,uBADD,uBACxBG,EADwB,EACxBA,KADwB,kBAEzBA,GAFyB,2CAAH,qDAKlBC,EAAgB,mCAAG,WAAMC,GAAN,yFACPL,EAAAA,EAAAA,IAAA,+BAAkCK,IAD3B,uBACtBF,EADsB,EACtBA,KADsB,kBAEvBA,GAFuB,2CAAH,sDAKhBvB,EAAiB,mCAAG,WAAMd,GAAN,yFACRkC,EAAAA,EAAAA,IAAA,iBAAoBlC,EAApB,MADQ,uBACvBqC,EADuB,EACvBA,KADuB,kBAExBA,GAFwB,2CAAH,sDAKjBG,EAAc,mCAAG,WAAMxC,GAAN,yFACLkC,EAAAA,EAAAA,IAAA,iBAAoBlC,EAApB,cADK,uBACpBqC,EADoB,EACpBA,KADoB,kBAErBA,GAFqB,2CAAH,sDAKdI,EAAiB,mCAAG,WAAMzC,GAAN,yFACRkC,EAAAA,EAAAA,IAAA,iBAAoBlC,EAApB,cADQ,uBACvBqC,EADuB,EACvBA,KADuB,kBAExBA,GAFwB,2CAAH,qD","sources":["pages/MovieDetails.jsx","services/movies-api.js"],"sourcesContent":["import { useState, useEffect, useRef } from 'react';\nimport { Link, Outlet, useParams, useLocation } from 'react-router-dom';\nimport { toast } from 'react-hot-toast';\nimport { RxArrowLeft } from 'react-icons/rx';\nimport { fetchDetailsMovie } from 'services/movies-api';\nimport Loader from 'components/Loader/Loader';\n\nconst BASE_URL = 'http://image.tmdb.org/t/p/w500';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const location = useLocation();\n  const backLocation = useRef(location.state?.from ?? '/');\n\n  useEffect(() => {\n    (async () => {\n      setIsLoading(true);\n      try {\n        const results = await fetchDetailsMovie(movieId);\n        setMovies(results);\n        setIsLoading(false);\n      } catch (error) {\n        toast.error(\n          `${error.message}. Movies loading failed, please try again`\n        );\n        setIsLoading(false);\n      }\n    })();\n  }, [movieId]);\n  const { poster_path, title, genres, overview, release_date, vote_average } =\n    movies;\n  return (\n    <>\n      <Link to={backLocation.current}>\n        <span className=\" ml-3 flex hover:text-stone-200 bg-blue-300 p-1 text-white  rounded max-w-[8%] items-center\">\n          <RxArrowLeft className=\"mr-1\" />\n          Go Back\n        </span>\n      </Link>\n      {poster_path && (\n        <>\n          <div className=\"ml-3 mt-3 flex\">\n            <div>\n              <img src={BASE_URL + poster_path} alt={title} />\n            </div>\n            <div className=\"flex flex-col gap-8 ml-5 last:max-w-[60%]\">\n              <h2 className=\"font-bold text-2xl\">{title}</h2>\n              <p className=\"text-xl\">Release Date: {release_date}</p>\n              <p className=\"text-xl\"> IMDb: {vote_average.toFixed(2)}</p>\n              <p className=\"text-xl\">\n                Genres: {genres.map(genre => genre.name).join(', ')}\n              </p>\n              <p className=\"text-xl\">Overview: {overview}</p>\n            </div>\n          </div>\n          <div className=\"border-b border-t border-black mt-2 mb-10\">\n            <p className=\"ml-5 mt-1 mb-1 font-bold text-xl\">\n              Additional information\n            </p>\n            <ul>\n              <li>\n                <Link\n                  to=\"cast\"\n                  className=\"ml-5 hover:text-green-800 focus:text-green-800 text-xl\"\n                >\n                  Cast\n                </Link>\n              </li>\n              <li>\n                <Link\n                  to=\"reviews\"\n                  className=\"ml-5 hover:text-green-800 focus:text-green-800 text-xl\"\n                >\n                  Reviews\n                </Link>\n              </li>\n            </ul>\n          </div>\n        </>\n      )}\n      <Outlet />\n      {isLoading && <Loader />}\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: '11546a486a09144867cb90a93b48d542',\n};\n\nexport const fetchTrendingMovie = async () => {\n  const { data } = await axios.get('/trending/movie/day');\n  return data;\n};\n\nexport const fetchSearchMovie = async query => {\n  const { data } = await axios.get(`/search/movie?&query=${query}`);\n  return data;\n};\n\nexport const fetchDetailsMovie = async movieId => {\n  const { data } = await axios.get(`/movie/${movieId}?`);\n  return data;\n};\n\nexport const fetchCastMovie = async movieId => {\n  const { data } = await axios.get(`/movie/${movieId}/credits?`);\n  return data;\n};\n\nexport const fetchReviewsMovie = async movieId => {\n  const { data } = await axios.get(`/movie/${movieId}/reviews?`);\n  return data;\n};\n"],"names":["movieId","useParams","useState","movies","setMovies","isLoading","setIsLoading","location","useLocation","backLocation","useRef","state","from","useEffect","fetchDetailsMovie","results","toast","message","poster_path","title","genres","overview","release_date","vote_average","to","current","className","src","alt","toFixed","map","genre","name","join","axios","api_key","fetchTrendingMovie","data","fetchSearchMovie","query","fetchCastMovie","fetchReviewsMovie"],"sourceRoot":""}