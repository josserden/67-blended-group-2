{"version":3,"file":"static/js/493.c3c6fb5d.chunk.js","mappings":"0OA4CA,UAnCa,WACX,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAoCE,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KAeA,OAbAC,EAAAA,EAAAA,YAAU,YACR,iBAAC,gHAE0BC,EAAAA,EAAAA,IAAeN,GAFzC,gBAEWO,EAFX,EAEWA,KACRH,EAAcG,GAHjB,gDAKGC,EAAAA,GAAAA,MAAA,UACK,KAAMC,QADX,8CALH,wDAAD,EAUD,GAAE,CAACT,KAGF,+BACE,eAAIU,UAAU,4DAAd,SACGP,EAAWQ,KAAI,gBAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,aAAcC,EAAvB,EAAuBA,GAAvB,OACd,gBAAaJ,UAAU,sBAAvB,WACE,gBACEK,MAAM,MACNC,OAAO,MACPC,IAAKJ,EA7BF,iCA6B4BA,EA3B3C,4JA4BYK,IAAKN,KAEP,uBAAIA,MAPGE,EADK,OAcvB,C,mMCzCDK,EAAAA,EAAAA,SAAAA,QAAyB,+BACzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QAAS,oCAGJ,IAAMC,EAAkB,mCAAG,sGACTF,EAAAA,EAAAA,IAAU,uBADD,uBACxBG,EADwB,EACxBA,KADwB,kBAEzBA,GAFyB,2CAAH,qDAKlBC,EAAgB,mCAAG,WAAMC,GAAN,yFACPL,EAAAA,EAAAA,IAAA,+BAAkCK,IAD3B,uBACtBF,EADsB,EACtBA,KADsB,kBAEvBA,GAFuB,2CAAH,sDAKhBG,EAAiB,mCAAG,WAAMzB,GAAN,yFACRmB,EAAAA,EAAAA,IAAA,iBAAoBnB,EAApB,MADQ,uBACvBsB,EADuB,EACvBA,KADuB,kBAExBA,GAFwB,2CAAH,sDAKjBhB,EAAc,mCAAG,WAAMN,GAAN,yFACLmB,EAAAA,EAAAA,IAAA,iBAAoBnB,EAApB,cADK,uBACpBsB,EADoB,EACpBA,KADoB,kBAErBA,GAFqB,2CAAH,sDAKdI,EAAiB,mCAAG,WAAM1B,GAAN,yFACRmB,EAAAA,EAAAA,IAAA,iBAAoBnB,EAApB,cADQ,uBACvBsB,EADuB,EACvBA,KADuB,kBAExBA,GAFwB,2CAAH,qD","sources":["pages/Cast.jsx","services/movies-api.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { toast } from 'react-hot-toast';\nimport { fetchCastMovie } from 'services/movies-api';\n\nconst BASE_URL = 'http://image.tmdb.org/t/p/w154';\nconst defaultImg =\n  'https://img.freepik.com/premium-vector/profile-icon-male-avatar-man-portrait-casual-person-silhouette-face-flat-design-vector-illustration_750364-603.jpg';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [castMovies, setCastMovies] = useState([]);\n\n  useEffect(() => {\n    (async () => {\n      try {\n        const { cast } = await fetchCastMovie(movieId);\n        setCastMovies(cast);\n      } catch (error) {\n        toast.error(\n          `${error.message}. Movies loading failed, please try again`\n        );\n      }\n    })();\n  }, [movieId]);\n\n  return (\n    <>\n      <ul className=\"flex flex-wrap gap-4 justify-center mt-3 text-center mb-3\">\n        {castMovies.map(({ name, profile_path, id }) => (\n          <li key={id} className=\"border border-black\">\n            <img\n              width=\"154\"\n              height=\"254\"\n              src={profile_path ? BASE_URL + profile_path : defaultImg}\n              alt={name}\n            />\n            <p>{name}</p>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\nexport default Cast;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: '11546a486a09144867cb90a93b48d542',\n};\n\nexport const fetchTrendingMovie = async () => {\n  const { data } = await axios.get('/trending/movie/day');\n  return data;\n};\n\nexport const fetchSearchMovie = async query => {\n  const { data } = await axios.get(`/search/movie?&query=${query}`);\n  return data;\n};\n\nexport const fetchDetailsMovie = async movieId => {\n  const { data } = await axios.get(`/movie/${movieId}?`);\n  return data;\n};\n\nexport const fetchCastMovie = async movieId => {\n  const { data } = await axios.get(`/movie/${movieId}/credits?`);\n  return data;\n};\n\nexport const fetchReviewsMovie = async movieId => {\n  const { data } = await axios.get(`/movie/${movieId}/reviews?`);\n  return data;\n};\n"],"names":["movieId","useParams","useState","castMovies","setCastMovies","useEffect","fetchCastMovie","cast","toast","message","className","map","name","profile_path","id","width","height","src","alt","axios","api_key","fetchTrendingMovie","data","fetchSearchMovie","query","fetchDetailsMovie","fetchReviewsMovie"],"sourceRoot":""}