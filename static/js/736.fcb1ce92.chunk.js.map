{"version":3,"file":"static/js/736.fcb1ce92.chunk.js","mappings":"0OAyCA,UApCgB,WACd,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAeA,OAbAC,EAAAA,EAAAA,YAAU,YACR,iBAAC,gHAE6BC,EAAAA,EAAAA,IAAkBN,GAF/C,gBAEWO,EAFX,EAEWA,QACRH,EAAWG,GAHd,gDAKGC,EAAAA,GAAAA,MAAA,UACK,KAAMC,QADX,8CALH,wDAAD,EAUD,GAAE,CAACT,KAGF,iBAAKU,UAAU,OAAf,WACE,eAAIA,UAAU,8BAAd,qBACCP,EAAQQ,OAAS,GAChB,wBACGR,EAAQS,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASC,EAApB,EAAoBA,GAApB,OACX,gBAAaL,UAAU,OAAvB,WACE,gBAAIA,UAAU,YAAd,qBAAmCG,MACnC,uBAAIC,MAFGC,EADE,OAQf,cAAGL,UAAU,YAAb,uDAIP,C,mMCrCDM,EAAAA,EAAAA,SAAAA,QAAyB,+BACzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QAAS,oCAGJ,IAAMC,EAAkB,mCAAG,sGACTF,EAAAA,EAAAA,IAAU,uBADD,uBACxBG,EADwB,EACxBA,KADwB,kBAEzBA,GAFyB,2CAAH,qDAKlBC,EAAgB,mCAAG,WAAOC,EAAOC,GAAd,yFACPN,EAAAA,EAAAA,IAAA,+BACGK,EADH,iBACiBC,IAFV,uBACtBH,EADsB,EACtBA,KADsB,kBAIvBA,GAJuB,2CAAH,wDAOhBI,EAAiB,mCAAG,WAAMvB,GAAN,yFACRgB,EAAAA,EAAAA,IAAA,iBAAoBhB,EAApB,MADQ,uBACvBmB,EADuB,EACvBA,KADuB,kBAExBA,GAFwB,2CAAH,sDAKjBK,EAAc,mCAAG,WAAMxB,GAAN,yFACLgB,EAAAA,EAAAA,IAAA,iBAAoBhB,EAApB,cADK,uBACpBmB,EADoB,EACpBA,KADoB,kBAErBA,GAFqB,2CAAH,sDAKdb,EAAiB,mCAAG,WAAMN,GAAN,yFACRgB,EAAAA,EAAAA,IAAA,iBAAoBhB,EAApB,cADQ,uBACvBmB,EADuB,EACvBA,KADuB,kBAExBA,GAFwB,2CAAH,qD","sources":["pages/Reviews.jsx","services/movies-api.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { toast } from 'react-hot-toast';\nimport { fetchReviewsMovie } from 'services/movies-api';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    (async () => {\n      try {\n        const { results } = await fetchReviewsMovie(movieId);\n        setReviews(results);\n      } catch (error) {\n        toast.error(\n          `${error.message}. Movies loading failed, please try again`\n        );\n      }\n    })();\n  }, [movieId]);\n\n  return (\n    <div className=\"ml-5\">\n      <h2 className=\"font-bold mt-3 text-xl mb-3\">Reviews</h2>\n      {reviews.length > 0 ? (\n        <ul>\n          {reviews.map(({ author, content, id }) => (\n            <li key={id} className=\"mb-3\">\n              <h3 className=\"font-bold\">Author: {author}</h3>\n              <p>{content}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p className=\"mt-5 mb-5\">We dont have any reviews for this movie</p>\n      )}\n    </div>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: '11546a486a09144867cb90a93b48d542',\n};\n\nexport const fetchTrendingMovie = async () => {\n  const { data } = await axios.get('/trending/movie/day');\n  return data;\n};\n\nexport const fetchSearchMovie = async (query, page) => {\n  const { data } = await axios.get(\n    `/search/movie?&query=${query}&page=${page}`\n  );\n  return data;\n};\n\nexport const fetchDetailsMovie = async movieId => {\n  const { data } = await axios.get(`/movie/${movieId}?`);\n  return data;\n};\n\nexport const fetchCastMovie = async movieId => {\n  const { data } = await axios.get(`/movie/${movieId}/credits?`);\n  return data;\n};\n\nexport const fetchReviewsMovie = async movieId => {\n  const { data } = await axios.get(`/movie/${movieId}/reviews?`);\n  return data;\n};\n"],"names":["movieId","useParams","useState","reviews","setReviews","useEffect","fetchReviewsMovie","results","toast","message","className","length","map","author","content","id","axios","api_key","fetchTrendingMovie","data","fetchSearchMovie","query","page","fetchDetailsMovie","fetchCastMovie"],"sourceRoot":""}